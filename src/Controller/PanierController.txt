<?php

namespace App\Controller;

use App\Service\Panier;
use App\Repository\OeuvresRepository;


use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Session\SessionInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

/**
 * @Route("/panier")
 */

class PanierController extends AbstractController

{
/**
 * 
 * @Route("/",name="app_panier" )
 */
public function index(SessionInterface $session, Panier $panier):Response
{
    dump($session->get('panier'));


    $panier->verification();

    $panierSession = $session->get('panier');
    // dd( $montant=$panier->montant());

    $montant=$panier->montant();



return $this->render ('panier.html.twig',[
    "panier"=> $panierSession,
    "montant"=>$montant,
    // dd($panierSession)
]);



 }



/**
 * 
 * @Route("/ajouter",name="panier_ajouter")
 */
public function panier_ajouter(Request $request,OeuvresRepository $repoOeuvre,Panier $panier)
{

    /* 
    dans la class request se trouve les superglobal 
    la propriete request concerne $_PoST
    $request->request= $_POST
    pour accedr a des position de ce tbleau on utlise la methosde
    */
    $idOeuvre = $request->request->get('oeuvre');
    
    $quantity=$request->request->get('quantity');
  

    $oeuvre=$repoOeuvre->find($idOeuvre);

    $panier->add($idOeuvre,$oeuvre->getPrix(),$quantity,$oeuvre->getPrix());
  
    return $this->redirectToRoute("app_panier");
    



}


/**
 * 
 * @Route("/vider",name="panier_vider")
 */
public function panier_vider(Panier $panier)
{
    $panier->vider();

    return $this->redirectToRoute("app_panier");
}

/**
 * 
 * @Route("/retirer/{id}",name="panier_retirer")
 */
public function panier_retirer($id, Panier $panier)
{
    $panier->remove($id);
    return $this->redirectToRoute("app_panier");

}

/**
 * 
 * @Route("/payer",name="panier_payer")
 */
public function panier_payer(Panier $panier)
{
    $user=$this->getUser();//pour pouvoir acceder à cette fonction faut etre connecté
    $panier->paiement($user);
    $this->addFlash("success","commande prise en compte");

    return $this->redirectToRoute("app_panier");


}
/**
 * @Route("/commandes",name="mes_commandes")
 */

public function mesCommandes()
{
    
return $this->redirectToRoute('panier/mes_commandes.html.twig');

}

}



page htmll twig panier

{% include "_flashes.html.twig" %}
	{% if panier.id is defined and panier.id|length > 0 %}
		<table class="table table-striped table-hover text-center mt-3">

			<thead class="bg-dark text-white">
				<tr>
					<th>id</th>
					{# <th>titre</th> #}
					<th>prix</th>
					<th>quantité</th>
					<th>total</th>
					<th>supprimer</th>
				</tr>
			</thead>


			<tbody>
				{% set size = panier.id|length - 1 %}
				
				
					{% for i in 0.. size %}
						<tr>
						
						<td>
						    {{ panier.id[i] }}
						</td>
						
						<td>
						     {# {{panier.titre[i] }} #}
						</td>
						
						<td>
						      {{panier.prix[i] }}
						</td>

						<td>
						{% if panier.quantity[i]  %}
							{{panier.quantity[i] }}{{dump(panier.quantity)}}

						{% else %}
							<span class="text-warning">indispo pour le moment</span>
						{% endif %}

						      {# {{panier.quantity[i] }} #}
						</td>
						
						<td>
						       {# {{panier.prix[i] * panier.quantity[i] }} #}
					
						</td>
							<td>
							<a href="{{ path('panier_retirer',{'id': panier.id[i] }) }} ">
								<i class="text-danger" data-feather="trash-2"></i>
							</a>
						</td>
					</tr>

				{% endfor %}
				<tr>
				<td colspan="4">montant total</td>
				<td>{{ montant}}€ </td>
				<td></td>

				</tr>
			</tbody>
		</table>
 		<a  href="{{ path('panier_vider')}} " class="btn btn-danger">vider le panier</a>
          {% if app.user %}
			  <a class="btn btn-success" href="{{ path('panier_payer')}} ">payer</a>

		  {% else %}
		
            <h4 class="text-center text-danger fst-italic mt-3">Veuillez vous 
                <a href="{{ path('app_login') }}">connecter</a>
             ou vous 
                <a href="{{ path('app_register') }}">inscrire</a> pour déposer votre message</h4>
        {% endif %}
			  
		



	{% endif %}



	panier.php

	<?php

namespace App\Service;

use App\Entity\Commande;
use App\Entity\DetailsCommande;
use App\Repository\OeuvresRepository;
use Doctrine\ORM\EntityManagerInterface;
// use ftp;
use Symfony\Component\HttpFoundation\Session\SessionInterface;

class Panier
{
    private $session;
    private $repoOeuvre;
    private $manager;

    public function __construct(SessionInterface $session,OeuvresRepository $repoOeuvre, EntityManagerInterface $manager)
    {
        
        $this->session=$session;
        $this->repoOeuvre=$repoOeuvre;
        $this->manager=$manager;
    }
    public function creation(){
 
    $array=[
        'id'=>[],
        'prix'=>[],
        'quantity'=>[],
        // 'titre'=>[]
    ];
    
    return $array;
}
public function add($id,$prix,$quantity)
{  
    
    $panier=$this->session->get('panier');
    $panier->verification();
    

    if(empty($panier))
    {
        $panier=$this->creation();
        $this->session->set('panier',$panier);
    }

    $position_search=array_search($id,$panier['id'] );
   
    if($position_search!==false)
    {
        // dd('quantity');
        $panier['quantity'][$position_search]+=$quantity;

    }
    else{
            $panier['id'][]=$id;
            $panier['prix'][]=$prix;
            $panier['quantity'][]=$quantity;
            // $panier['titre'][]=$titre;
    }
    $this->session->set('panier',$panier);

}

public function vider()
{
    $panier=$this->creation();
    $this->session->set('panier',$panier);
}

public function remove($id)
{
    $panier=$this->session->get('panier');
    $position=array_search($id,$panier['id'] );
    array_splice($panier['id'],$position,1 );
    // array_splice($panier['titre'],$position,1 );
    array_splice($panier['prix'],$position,1 );
    array_splice($panier['quantity'],$position,1);


    $this->session->set('panier',$panier);
    
}

public function montant()
{
    $montant=0;
    $panier=$this->session->get('panier');
    $size = count($panier['id'] );
   
    for ($i=0;$i<$size;$i++)
    {
        // dd( $panier);
        if (is_numeric($panier['quantity'][$i]) && is_numeric($panier['prix'][$i])) {
        $montant +=$panier['quantity'][$i]*$panier['prix'][$i];
        // dump($montant);
    }
    }
    $montant=round($montant,2);
    return $montant;
}

public function verification()
{
    $panier=$this->session->get('panier');
    $size=count($panier['id'] );
    for ($i=0;$i<$size;$i++)
    {
        
        $oeuvre=$this->repoOeuvre->find($panier['id'][$i] );

        if($oeuvre->getStock())
        {
            if($oeuvre->getStock() < $panier ['quantity'][$i] )
            { 
                $oeuvre['quantity'][$i]=$oeuvre->getStock();
            }
            
        }
        else
        {
            $panier['quantity'][$i]=0;
        }
    }

    $this->session->set('panier',$panier);

}

public function paiement($user)
    {

        $this->verification();

        $panier=$this->session->get('panier');

        $size=count($panier['id'] );

        $acces=false;

        for($i=0; $i<$size;$i++)// si $i ! 0 alors acces is true
        {
            if($panier['quantity'][$i] )
            {
                $acces=true;
            }
        }



        if($acces)
        {
            $commande=new Commande;
            $commande->setUser($user);
            $commande->setMontant($this->montant());
            $commande->setDateAt(new \DateTimeImmutable('now'));
            $commande->setEtat(0);// 0=en cours de tratement; 1 expedié;2 livré

            $this->manager->persist($commande);
            $this->manager->flush();

            for($i=0;$i < $size;$i++)
            {
                if($panier['quantity'][$i] )
                {
                    $oeuvre=$this->repoOeuvre->find($panier['id'][$i] );


                    $detail=new DetailsCommande;
                    $detail->setCommande($commande);
                    $detail->setOeuvre($oeuvre);
                    $detail->setQuantity($panier['quantity'][$i] );
                    $detail->setPrix($panier['prix'][$i] );

                    $this->manager->persist($detail);
                    $this->manager->flush();


                    $stockBdd=$oeuvre->getStock();

                    $newStock=$stockBdd - $panier['quantity'][$i];

                    $oeuvre->setStock($newStock);

                    $this->manager->persist($oeuvre);
                    $this->manager->flush();

                    $this->remove($panier['id'][$i] );

                }
            }

        }


    }


}

